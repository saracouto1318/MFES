class Appointment is subclass of Task

types
	public Type = <Normal> | <Urgencies>;
	public Priority = <High> | <Medium> | <Low>;
instance variables
  public prescriptions:set of (Prescription);
  public type : Type;
  public priority : Priority;
  
  inv type <> nil and priority <> nil;
  inv card prescriptions >= 0;
  inv medicalAssoc.getType() = <Doctor>;
operations
	public Appointment: MedicalAssociated * Type==> Appointment
		Appointment(d, t) == (medicalAssoc := d; type := t; priority := <Medium>; prescriptions := {}; return self)
	post medicalAssoc = d and type = t and prescriptions = {} and priority = <Medium>;
	
	public Appointment: MedicalAssociated * Type * Priority ==> Appointment
		Appointment(d, t, p) == (medicalAssoc := d; type := t; priority := p; prescriptions := {}; return self)
	post medicalAssoc = d and type = t and prescriptions = {} and priority = p;
	
	pure public getTypeAppointment : () ==> Type
		getTypeAppointment() == (return type);
		
	pure public getPriority : () ==> Priority
		getPriority() == (return priority);
	
  pure public getPrescriptions : () ==> set of (Prescription)
  	getPrescriptions() == (return prescriptions);
  	
  pure public getPrescription : seq of (char) ==> Prescription
  	getPrescription(code) == (
  														dcl prescription: Prescription;
  															for all p in set prescriptions do
  																if(p.compare(code))
  																	then prescription := p;
  															
  															return prescription;
  														)
  pre code <> [];
  
  public setPriority : Priority ==> ()
  	setPriority(p) == (priority := p)
  pre type = <Urgencies>;
  
  pure public addPrescription : Prescription ==> set of (Prescription)
  	addPrescription(p) == (return prescriptions union {p})
  pre p not in set prescriptions
  post p in set prescriptions;
  															
	pure public removePrescription : Prescription ==> set of (Prescription)
  	removePrescription(p) == (return prescriptions \ {p})
  pre p in set prescriptions
  post p not in set prescriptions;
		
	pure public getType : () ==> seq of (char) 
		getType() == (
										if type = <Normal> 
											then return "Appointment"
										else
											return "Urgencies");
  	
end Appointment
