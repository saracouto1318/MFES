class SafetyNetHospital
types

instance variables
	public hospitals: set of (Hospital);
	
	inv card hospitals >= 0;
operations

	public SafetyNetHospital : () ==> SafetyNetHospital
		SafetyNetHospital() == (hospitals := {}; return self)
	post hospitals = {};
		
	pure public addHospital : Hospital ==> set of (Hospital)
		addHospital(h) == (return hospitals union {h})
	pre h not in set hospitals
	post h in set hospitals;
	
	pure public removeHospital : Hospital ==> set of (Hospital)
		removeHospital(h) == (return hospitals \ {h})
	pre h in set hospitals
	post h not in set hospitals;
	
	pure public numHospitals : () ==> nat
		numHospitals() == (return card hospitals);
		
	pure public getHospitalsMoreAppointments : () ==> Hospital
		getHospitalsMoreAppointments() == (
																				dcl max: nat, hosp: Hospital;
																				max := 0;
																				for all h in set hospitals do
																					if(card (hd h.getTasksByType()) > max)
																						then (max := card (hd h.getTasksByType()); hosp := h);
																				return hosp);
	
	pure public getDoctorsMoreHospitals : () ==> set of(MedicalAssociated)
		getDoctorsMoreHospitals() == (
																		dcl doctors: set of(MedicalAssociated);
																		for all h in set hospitals do (
																			dcl med: set of (MedicalAssociated), list: set of(Hospital);
																			med := hd h.getMedicalAssociatedByType();
																			
																			list := hospitals \ {h};
																			for all m in set med do(
																				for all l in set list do
																					if(m.getType() = <Doctor> and m in set hd l.getMedicalAssociatedByType() and m not in set doctors)
																						then doctors := doctors union {m};
																			);
																		);
																		
																		return doctors;
																	); 													
		
end SafetyNetHospital