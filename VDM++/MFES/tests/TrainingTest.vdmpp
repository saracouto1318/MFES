class TrainingTest
instance variables
	private doctor: HealthProfessional := new HealthProfessional("Rua de Cima", "Ana", "Marques", "123432156", "921349076", "111111222", <Doctor>);
 	private purpose: Utils`Purpose := <Training>;
 	
	private time1: Utils`Time := mk_Utils`Time(12, 10);
	private date1: Utils`Date := mk_Utils`Date(2017, 12, 25, time1);
	private time2: Utils`Time := mk_Utils`Time(12, 30);
	private date2: Utils`Date := mk_Utils`Date(2017, 12, 25, time2);
	private schedule: Schedule := new Schedule(date1, date2);
	
	private time3: Utils`Time := mk_Utils`Time(12, 15);
	private date3: Utils`Date := mk_Utils`Date(2017, 12, 25, time3);
	private time4: Utils`Time := mk_Utils`Time(12, 35);
	private date4: Utils`Date := mk_Utils`Date(2017, 12, 25, time4);
	private schedule2: Schedule := new Schedule(date3, date4);
	
	private training : Training := new Training(purpose, schedule, doctor);
operations
	
	private assertTrue: bool ==> ()
		assertTrue(cond) == return
	pre cond;
	
	public testGetsSets : () ==> ()
		testGetsSets() == (
			IO`print("\n Testing Training gets and sets \n");
			assertTrue(training.getPurpose() = <Training>);
			assertTrue(training.getMedAssoc().getCC() = "123432156");
			
			training.setPurpose(<AddSkills>);
			assertTrue(training.getPurpose() = <AddSkills>);
			
			assertTrue(training.getSchedule().getScheduleStart().year = 2017);
			assertTrue(training.getSchedule().getScheduleStart().month = 12);
			assertTrue(training.getSchedule().getScheduleStart().day = 25);
			assertTrue(training.getSchedule().getScheduleStart().time.hour = 12);
			assertTrue(training.getSchedule().getScheduleStart().time.min = 10);
			
			assertTrue(training.getSchedule().getScheduleEnd().year = 2017);
			assertTrue(training.getSchedule().getScheduleEnd().month = 12);
			assertTrue(training.getSchedule().getScheduleEnd().day = 25);
			assertTrue(training.getSchedule().getScheduleEnd().time.hour = 12);
			assertTrue(training.getSchedule().getScheduleEnd().time.min = 30);
			
			training.setSchedule(schedule2);
			
			assertTrue(training.getSchedule().getScheduleStart().year = 2017);
			assertTrue(training.getSchedule().getScheduleStart().month = 12);
			assertTrue(training.getSchedule().getScheduleStart().day = 25);
			assertTrue(training.getSchedule().getScheduleStart().time.hour = 12);
			assertTrue(training.getSchedule().getScheduleStart().time.min = 15);
			
			assertTrue(training.getSchedule().getScheduleEnd().year = 2017);
			assertTrue(training.getSchedule().getScheduleEnd().month = 12);
			assertTrue(training.getSchedule().getScheduleEnd().day = 25);
			assertTrue(training.getSchedule().getScheduleEnd().time.hour = 12);
			assertTrue(training.getSchedule().getScheduleEnd().time.min = 35);
		);

	public static main: () ==> ()
 		main() == (
 			dcl trainingTest: TrainingTest := new TrainingTest();
 			IO`print("\n *****Running TrainingTest***** \n");
 			trainingTest.testGetsSets();
 		);
end TrainingTest