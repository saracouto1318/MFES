class Agenda
instance variables

private healthProfessional : HealthProfessional;
private agenda : set of (Schedule);

inv card agenda >= 0;

operations
	-- Agenda constructor
	public Agenda : HealthProfessional ==> Agenda
		Agenda(h) == (healthProfessional := h; agenda := {}; return self)
	post healthProfessional = h and agenda = {};
	
	-- Returns the agenda's health professional
	pure public getHealthProfessional : () ==> HealthProfessional
		getHealthProfessional() == (return healthProfessional);
	
	-- Returns the agenda's schedules
	pure public getAgenda : () ==> set of (Schedule)
		getAgenda() == (return agenda);
	
	-- Adds a schedule to the agenda
	public addSchedule : Schedule ==> ()
		addSchedule(s) == (agenda := agenda union {s})
	pre s not in set agenda and forall sch in set agenda & not overlap(s, sch)
	post s in set agenda;
	
	-- Removes the schedule that overlaps another from the agenda
	public removeSchedule : Schedule ==> ()
		removeSchedule(s) == (
			for all sch in set agenda do
				if(overlap(s, sch))
					then agenda := agenda \ {sch});
	
	-- Checks if a schedule overlaps with other schedule
	pure public overlap: Schedule * Schedule ==> bool
		overlap(t1, t2) == (return t1.overlap(t1, t2));
end Agenda
