class Appointment is subclass of Task

instance variables
  private prescriptions:set of (Prescription);
  private priority : Types`Priority;
  
  inv priority <> nil;
  inv card prescriptions >= 0;
  inv medicalAssoc.getType() = <Doctor>;
operations
	public Appointment: HealthProfessional * Schedule * Patient * Hospital==> Appointment
		Appointment(d, s, p, h) == (medicalAssoc := d; priority := <Medium>; prescriptions := {}; Task(d, s, p, h, <Appointment>))
	post medicalAssoc = d and prescriptions = {} and priority = <Medium>;
	
	public Appointment: HealthProfessional * Types`Priority * Schedule * Patient * Hospital ==> Appointment
		Appointment(d, p, s, pat, h) == (medicalAssoc := d; priority := p; prescriptions := {}; Task(d, s, pat, h, <Urgencies>))
	pre p <> nil
	post medicalAssoc = d and prescriptions = {} and priority = p;

	pure public getPriority : () ==> Types`Priority
		getPriority() == (return priority);
	
  pure public getPrescriptions : () ==> set of (Prescription)
  	getPrescriptions() == (return prescriptions);
  
  public setPriority : Types`Priority ==> ()
  	setPriority(p) == (priority := p)
  pre type = <Urgencies>;
  
  public addPrescription : Prescription ==> ()
  	addPrescription(p) == (prescriptions := prescriptions union {p})
  pre p not in set prescriptions
  post p in set prescriptions;
  															
	public removePrescription : Prescription ==> ()
  	removePrescription(p) == (prescriptions := prescriptions \ {p})
  pre p in set prescriptions
  post p not in set prescriptions;
  	
end Appointment
